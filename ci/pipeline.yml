---
resource_types:
  - name: npm-cache
    type: docker-image
    source:
      repository: ymedlop/npm-cache-resource
      tag: latest

  - name: kubernetes
    type: docker-image
    source:
      repository: zlabjp/kubernetes-resource
      tag: "1.12"

  - name: helm
    type: docker-image
    source:
      repository: mustafaatakan/mygoogle
      username: ((mustafaatakan-username))
      password: ((mustafaatakan-passwd))
      tag: v1


resources:
  - name: hello_hapi
    type: git
    source: &repo-source
      uri: https://github.com/matakan/hello_hapi
      branch: master

  - name: dependency-cache
    type: npm-cache
    source:
      <<: *repo-source
      paths:
        - package.json

  - name: appRegistry
    type: docker-image
    source:
      repository: mustafaatakan/demo-cicd
      username: ((mustafaatakan-username))
      password: ((mustafaatakan-passwd))

  - name: scannercli
    type: docker-image
    source:
      repository: aquasec/scanner-cli
      tag: 3.2
      username: ((mustafaatakan-username))
      password: ((mustafaatakan-passwd))

  - name: helmKube
    type: helm
    source:
#      release: helmKube
      tiller_service_account: tiller
      helm_init_server: true
      cluster_url: https://myaksclus-testrg1-564017-dd947359.hcp.uksouth.azmk8s.io:443
      cluster_ca: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV5RENDQXJDZ0F3SUJBZ0lSQUlWMDFvcGk5ZXZCeW01TS9pUmJqSnd3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRneE1UQTFNVEV5TmpBeFdoY05NakF4TVRBME1URXlOakF4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTE5oCndIeThoWXNmdHdPV3V0K1dvM1pIcXM5M3UzU29qMlBMbTZVdVl1Zm5PcW16Tlpwb2I3VnBiQzVOaVVJbHl3YkcKZll3eURXYXVmbVpBU2t2NVpySzhpTTZEbnBQVE01RWRWRkFMWmV2azB0YlR2QkZIRTBDL3BFZkxpcnROYjlLQQozd2U1TE5nbnBlamZGSHJWSlVFOEhBRjdUYzZyeS9WeXNjUmxRQWZkeXFEMzlOWkYvSDNPTDcyRXVuL3VXQzh0CmU1ZzlqVEdIckt6YU11a3Z4cEFWTlpJWEttWUJsbWF5MzZDeEFoMVJ0SGxvdERLSXRwbU5Rd2Frc2NpeFlMYm4KUXVVZnF3QlIzTFV1NFJ3M3NIRHRoR2NqZGtiQVI4QWtaVlRvekVmUE5CK0ZaT2pQTjMxZVRnSm5lYVdNWWg1Vwp0VFVkVGI0djd6OGJ6SWlzQ2NSMHZHRGtsL0F3cDE1d2U2bnk5VTNUVzAzTmt4UGhsZjJFVFBvVFM2U3UrR2RwCjlVYUIzRm5VL0ZMcEs1a3JQa2crOERzdENnMjVzN05MSTd3WjhDcUN0bTVlcndoRHg3czQ4aFFpZTdzQXVPbk8KY1NGekY3bnhPZEh4bHFoMmM0ZHp2SWFreGU4YjhzbFlXWXd0NlRYbVhibkF6KzFlcy9rUDdENWxSNWM4RDdEbwovbHF1dHBTVGNSTytSRmQySm1MTkhPbkdZRE5sVlFZSXAzTWc0TUxzcWphR2VDWWRvQmVoaVRMZW8yZDJsbnRYClNVQURYK3FzQ2VkNk5mb2tSSXVrQTlpVy81b291MW1oM2dGRC8zTWViNW0wdElKTnRYQUhlM1psVUVQek5nL1AKcWJUcGJmU1NjWE5UaXlpdGprcmVoMmV4ZXQ3TDJIMWM4SGZ0R1U1SkFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQgovd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQW40T0NECnlrRFczbTlKZGJBZkhFZkc4bVptTGpoYXdNRnI1RW1DNnFQakJEbEFyb1VSN1pndU4rNXNUOXdsNWR6SDljeC8KdHRDdUdVcEI2K0hCbEY4YmRlRHcyaUFyVmROQVpza1c2UnZGUm40cVl4aHlVOFl4bEZaTmZpQ0pLK0hkMnQzcAppb0xXMkJ6YVdPenFSbk5veEorL2dhUGZlVU1TTktYZkZoUjBLc3N2YVNONDRidVFUUGVyalc3RXdyZkJ6M2gyCm85SWNwaytxRzgrREZJMnlWUk16SWNmME9aWDRjKzE4Y3J1bVlqKzhMcXZkM3hUMjc4aFZjdWEvK3RpQm9qY1UKOFY5eWJhNVFCQVQ4S2VDdDEvbWNVZUNLdVVnVU9UYVMrVjJaazJ4K2R6b3h1dVBocnlmSll5Qm1CL01SdFZ4dAo0aE92ZWpJeWVUTFNRNWV5bUlOcDU5d2NrcDM2ZmZmYWNnejI1QXF6ZlZmM00yL0RZQ0ZqU3pMaTh2ZTdVR2xCCnN0UEdNT1VUWVRKOHlDVXcybEVkY1d2MHhGQWMza2ZOaDlnVkNTQ1J1MDkxWFI2dlg1ZFNzQ05wejQ5NHp1amgKNG5hQmVOZTJMVE44NENLdk5Gc3cvOVBGQ0lwNkplZktRa3B1QlgraDVLU2RBOWpFZ2pmRHBGMy9XRWxpS2hYQwo3eTB6OTBUVDlVTlpwNWpnZ3ZxREhRN1hyQ3c3ZGkzODF4NkFhMlVoMDdjQmp1ZWFCK0VHaytoQTJZWS9NUVMvCll1U0h5VDU2enM3ekJjV0wvNk91eUxkWitWNTRpa3VnblpaRGRDYllzZzBkTld4QUVXdzhFNlV4Rk4rVjhJcE4KMkZWV1R3SEtRakNLR2tGQ0FYb0pINHlFM1JsOE9Gay9tZmFBMEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      token: "8879e3b1c8ad6917ff389719e3d9eeb3"
      repos:
        - name: chartmuseum
          url: http://51.140.160.73:8080


jobs:
  - name: Install_dependencies
    plan:
      - get: hello_hapi
        trigger: true
      - get: dependency-cache

  - name: Run_tests
    plan:
      - get: hello_hapi
        trigger: true
        passed: [Install_dependencies]
      - get: dependency-cache
        passed: [Install_dependencies]
      - task: run the test suite
        file: hello_hapi/ci/tasks/run_tests.yml

  - name: Security_scan
    public: true
    plan:
      - aggregate:
        - get: hello_hapi
          trigger: true
          passed: [Run_tests]
        - get: dependency-cache
          passed: [Run_tests]
        - get: scannercli
          params: {save: true}
      - task: run security scan
        privileged: true
#        file: hello_hapi/ci/tasks/run_security_scan.yml
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: amidos/dcind
          inputs:
            - name: scannercli
            - name: hello_hapi
          run:
            path: sh
            args:
              - -exc
              - |
                source /docker-lib.sh
                start_docker

                docker load -i scannercli/image
                docker tag "$(cat scannercli/image-id)" "$(cat scannercli/repository):$(cat scannercli/tag)"

                cd hello_hapi
                docker build -t demo-cicd:tmp .

                docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/scanner-cli:3.2 scan -H http://aqua-web.default:8080 -U ((scan-username)) -P ((scan-passwd)) --local demo-cicd:tmp
               

  - name: Docker_Push
    public: false
    plan:
      - get: hello_hapi
        trigger: true
        passed: [Security_scan]
      - get: dependency-cache
        passed: [Security_scan]
      - put: appRegistry
        params:
          build: hello_hapi

  - name: ChartRepo_Push
    plan:
      - get: hello_hapi
        trigger: true
        passed: [Docker_Push]
      - task: Create and Upload chart
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
#              repository: lachlanevenson/k8s-helm
              repository: centos/systemd
          inputs:
            - name: hello_hapi
          run:
            path: sh
            args:
              - -exc
              - |
                uname -a
                yum -y install openssl git wget
                curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash
                helm init --client-only
                helm plugin install https://github.com/chartmuseum/helm-push
                curl -X DELETE http://51.140.160.73:8080/api/charts/hello_hapi_helmpkg/0.1.0

                cd hello_hapi
                helm create hello_hapi_helmpkg
                cp kubedir/service.yaml hello_hapi_helmpkg/templates
                cp kubedir/deployment.yaml hello_hapi_helmpkg/templates
                rm hello_hapi_helmpkg/templates/ingress.yaml
                helm lint hello_hapi_helmpkg
                helm package hello_hapi_helmpkg
                
                helm repo add chartmuseum http://51.140.160.73:8080
                helm push --force hello_hapi_helmpkg-0.1.0.tgz chartmuseum

  - name: Deploy_Chart
    public: false
    plan:
      - get: hello_hapi
        trigger: true
        passed: [ChartRepo_Push]
      - put: helmKube
        params:
          chart: chartmuseum/hello_hapi_helmpkg
